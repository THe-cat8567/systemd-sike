#! /bin/sh

# set up output to file descriptor 3
exec 1>/dev/bootup-log
exec 2>/dev/bootup-log
exec 3<>/dev/console

# set PATH
PATH="/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin"

# colored output functions

echo_green () {
echo "\033[32m$1\033[96m ($(cut -d "." -f 1 < /proc/uptime)s)\033[0m" 1>&3
}

echo_blue () {
echo "\033[96m$1 \033[0m" 1>&3
}

echo_red () {
echo "\033[91m$1\033[96m ($(cut -d "." -f 1 < /proc/uptime)s)\033[0m" 1>&3
}

echo_status () {
if [ "$?" = "0" ]; then
	echo_green "$1"
else
	echo_red "$2"
fi
}

# mount function

fmount () {
mountpoint "$4" || mount -t "$1" -o "$2" "$3" "$4"

if [ "$?" -gt "0" ]; then
echo_red "$3 not mounted to $4"
else
echo_green "$3 mounted to $4"
fi
}

# welcome
echo_blue "Initialization process has begun !!"

# api file systems

# mount /proc
fmount proc nosuid,noexec,nodev proc /proc

# mount /sys
fmount sysfs nosuid,noexec,nodev sys /sys

# mount /run as tmpfs
fmount tmpfs mode=0755,nosuid,nodev run /run

# mount /dev
fmount devtmpfs mode=0755,nosuid dev /dev

# create addational dirs
mkdir -p -m 0755 /dev/pts /dev/shm /dev/mqueue /dev/hugepages /run/lock

# mount /dev/pts
fmount devpts mode=0620,gid=5,nosuid,noexec devpts /dev/pts

# mount /dev/shm
fmount tmpfs mode=1777,nosuid,nodev shm /dev/shm

# mount cgroups v1
fmount tmpfs mode=0755 cgroup /sys/fs/cgroup

# mount cgroups v2
mkdir -p /sys/fs/cgroup/unified
fmount cgroup2 nsdelegate cgroup2 /sys/fs/cgroup/unified

# mount /dev/hugepages
fmount hugetlbfs defaults hugetlbfs /dev/hugepages

# mount /dev/mqueue
fmount mqueue defaults none /dev/mqueue

# mount binfmt_misc
fmount binfmt_misc nosuid,nodev,noexec binfmt_misc /proc/sys/fs/binfmt_misc

# mount efivars
fmount efivarfs defaults,ro none /sys/firmware/efi/efivars/

# symlink /run/lock to /var/lock
mount -o remount,rw / ; echo_status "root mounted as read-only" "root not mounted as read-only"
rm -rf /var/lock /run/lock
ln -s /run/lock /var/lock
echo_status "/run/lock symlinked to /var/lock" "/run/lock not symlinked to /var/lock"

# udev
if [ -x /usr/lib/systemd/systemd-udevd ]; then
	udev_use="/usr/lib/systemd/systemd-udevd"
elif [ -x /usr/bin/udevd ]; then
	udev_use="/usr/bin/udevd"
fi
"$udev_use" --daemon ; echo_status "udevd started" "udevd not started"
udevadm trigger --action=add --type=subsystems ; echo_status "udev subsystems triggered" "udev subsystems not triggered"
udevadm trigger --action=add --type=devices ; echo_status "udev devices triggered" "udev devices not triggered"
udevadm settle ; echo_status "udev settled" "udev not settled"

# mount root as read-only
mount -o remount,ro / ; echo_status "root mounted as read-only" "root not mounted as read-only"

# fsck
fsck -A -a -t noopts=_netdev
if [ "$?" -gt "1" ]; then
echo_red "filesystem not fscked" ; /bin/sh
else
echo_green "filesystem fscked"
fi

# mount root as read-write
mount -o remount,rw / ; echo_status "root mounted as read-write" "root not mounted as read-write"

# mount all filesystems
mount -a ; echo_status "filesystem mounted" "filesystem not mounted"

# enable swap
swapon -a ; echo_status "swap activated" "swap not activated"

# timezone and system clock
ln -s -f /usr/share/zoneinfo/America/Los_Angeles /etc/localtime ; echo_status "timezone set" "timezone not set"
export TZ=America/Los_Angeles
hwclock --systz --localtime ; echo_status "system clock set" "system clock not set"

# random seed
cp /var/lib/random-seed /dev/urandom
dd if=/dev/urandom of=/var/lib/random-seed count=1 bs="$(cat /proc/sys/kernel/random/poolsize)" ; echo_status "random seed stored" "random seed not stored"

# loopback device
ip link set up dev lo ; echo_status "loopback device set up" "loopback device not set up"

# hostname
cat /etc/hostname > /proc/sys/kernel/hostname ; echo_status "hostname set" "hostname not set"

# utmp/wtmp
install -m0664 -o root -g utmp /dev/null /var/log/wtmp ; echo_status "/var/log/wtmp created" "/var/log/wtmp not created"
install -m0600 -o root -g utmp /dev/null /var/log/btmp ; echo_status "/var/log/btmp created" "/var/log/btmp not created"

# tmpfiles
install -dm1777 /tmp/.X11-unix /tmp/.ICE-unix ; echo_status "/tmp/.X11-unix and /tmp/.ICE-unix created" "/tmp/.X11-unix and /tmp/.ICE-unix not created"

# get rid of nologin file
rm -f /etc/nologin ; echo_status "/etc/nologin removed"

# log dmesg
dmesg > /var/log/dmesg.log ; echo_status "dmesg written to /var/log/dmesg.log" "dmesg not written to /var/log/dmesg.log"

# display bootup time
echo_blue "system booted in $(cut -d "." -f 1 < /proc/uptime) seconds"

# service manager

(
mkdir -p /tmp/service

while read -r ENABLED_SERVICE
do

if echo "${ENABLED_SERVICE}" | grep '^#' ; then
	continue
fi

cp -r /etc/service/"${ENABLED_SERVICE}" /tmp/service/

done < /etc/service-enabled

env -i PATH="$PATH" svscan /tmp/service
) &

